#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        macro_highlight_word: macro_highlight_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(LEFT)>,
                <&macro_tap>,
                <&kp LS(LC(RIGHT))>;

            label = "MACRO_HIGHLIGHT_WORD";
        };
    };

    combos {
        compatible = "zmk,combos";

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };

        LAYER_number {
            bindings = <&tog 1>;
            key-positions = <16 15>;
        };

        LAYER_function {
            bindings = <&tog 3>;
            key-positions = <1 2>;
        };

        math_equal {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
        };

        math_minus {
            bindings = <&kp MINUS>;
            key-positions = <18 19>;
        };

        math_underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 31>;
        };

        math_plus {
            bindings = <&kp PLUS>;
            key-positions = <18 19 20>;
        };

        paren_Lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 40>;
        };

        paren_Lparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <40 19>;
        };

        paren_Lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 40>;
        };

        paren_Rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <40 8>;
        };

        paren_Rparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <40 20>;
        };

        paren_Rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <40 32>;
        };

        shape_fslash {
            bindings = <&kp SLASH>;
            key-positions = <31 20 9>;
        };

        shape_bslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 20 33>;
        };

        shape_caret {
            bindings = <&kp CARET>;
            key-positions = <19 8 21>;
        };

        shape_lthan {
            bindings = <&kp LESS_THAN>;
            key-positions = <19 8 41>;
        };

        shape_gthan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <7 20 40>;
        };

        shape_tilde {
            bindings = <&kp TILDE>;
            key-positions = <19 10>;
        };

        shape_accent {
            bindings = <&kp GRAVE>;
            key-positions = <6 19>;
        };

        shape_percent {
            bindings = <&kp PERCENT>;
            key-positions = <31 9>;
        };

        intonation_exclam {
            bindings = <&kp EXCLAMATION>;
            key-positions = <7 8 21>;
        };

        intonation_question {
            bindings = <&kp QUESTION>;
            key-positions = <19 20 9>;
        };

        intonation_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <31 32 9>;
        };

        atsign {
            bindings = <&kp AT>;
            key-positions = <6 19 20>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <30 31 32>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <18 20>;
        };

        hash_pound {
            bindings = <&kp POUND>;
            key-positions = <6 7 8>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <19 20>;
        };

        enter_return {
            bindings = <&kp ENTER>;
            key-positions = <20 21 22>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <7 8 9>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <8 9 10>;
        };

        page_up {
            bindings = <&kp PAGE_UP>;
            key-positions = <18 21>;
        };

        page_down {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <30 33>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp ESCAPE  &kp Q        &kp W        &kp E         &kp R        &kp T        &kp Y         &kp U             &kp I               &kp O           &kp P          &kp BACKSPACE
&kp LSHFT   &kp A        &kp S        &kp D         &kp F        &kp G        &kp H         &hm LEFT_SHIFT J  &hm LEFT_CONTROL K  &hm LEFT_ALT L  &hm LGUI SEMI  &kp SQT
&kp LCTRL   &mt LA(Z) Z  &mt LC(X) X  &mt LC(C) C   &mt LC(V) V  &kp B        &kp N         &kp M             &kp COMMA           &kp DOT         &kp FSLH       &kp RSHFT
                                      &lt 3 ESCAPE  &lt 2 SPACE  &lt 1 TAB    &lt 1 RETURN  &lt 2 BACKSPACE   &lt 3 DELETE
            >;
        };

        NAV {
            display-name = "NavNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&to 0       &kp N1               &kp N2          &kp N3           &kp N4             &kp N5           &kp N6       &kp N7             &kp N8          &kp N9  &kp N0               &trans
&caps_word  &kp LA(PRINTSCREEN)  &kp UP_ARROW    &trans           &trans             &kp PAGE_UP      &kp PERCENT  &kp N4             &kp N5          &kp N6  &kp LA(PRINTSCREEN)  &trans
&trans      &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans             &kp PAGE_DOWN    &kp N0       &kp N1             &kp N2          &kp N3  &kp SLASH            &trans
                                                 &kp LC(DELETE)   &kp LC(BACKSPACE)  &trans           &trans       &kp LC(BACKSPACE)  &kp LC(DELETE)
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT          &kp HASH               &kp DLLR         &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK              &kp LEFT_PARENTHESIS  &kp RPAR       &trans
&trans  &trans    &kp HOME        &kp UP_ARROW           &kp END          &kp GRAVE    &kp MINUS  &kp EQUAL  &kp LBKT               &kp RBKT              &kp PIPE       &trans
&trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW         &kp RIGHT_ARROW  &kp TILDE    &kp UNDER  &kp PLUS   &kp LBRC               &kp RBRC              &kp BACKSLASH  &trans
                                  &macro_highlight_word  &trans           &trans       &trans     &trans     &macro_highlight_word
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans      &studio_unlock    &trans  &kp F4  &kp F5  &kp F6  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans  &kp F1  &kp F2  &kp F3  &bootloader  &trans
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
